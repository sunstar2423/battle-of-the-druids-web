name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Build HTML files with environment variables
      run: |
        # Set environment variables for build
        export GOOGLE_ANALYTICS_ID="${{ secrets.GOOGLE_ANALYTICS_ID }}"
        export SITE_URL="${{ secrets.SITE_URL || 'https://sunstar2423.github.io/titanblade-games' }}"
        export CONTACT_EMAIL="${{ secrets.CONTACT_EMAIL || 'contact@titanbladegames.com' }}"
        
        # Run build script to inject environment variables
        node build-env.js
        
        # Verify the build worked
        echo "üîç Checking for any remaining placeholders..."
        if grep -r "{{.*}}" . --include="*.html"; then
          echo "‚ùå Found unreplaced placeholders!"
          exit 1
        else
          echo "‚úÖ All placeholders replaced successfully!"
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: '.'
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Update deployment status
      run: |
        echo "üéâ GitHub Pages deployment complete!"
        echo "üåê Live URL: ${{ steps.deployment.outputs.page_url }}"
        echo "üéÆ Games available at:"
        echo "  - Battle of the Druids: ${{ steps.deployment.outputs.page_url }}battle-of-the-druids/"
        echo "  - Isle of Adventure: ${{ steps.deployment.outputs.page_url }}isle-of-adventure/"
        echo "  - Doom Riders: ${{ steps.deployment.outputs.page_url }}doom-riders/"